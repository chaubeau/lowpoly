// this will sample a 1-pixel box around each pixel and determine if the center pixel's red channel is the maximum in that area. If it is, it stays. If not, it is set to 0 for all color components.
varying vec2 v_Texcoord;
uniform sampler2D texture;

uniform float textureWidth;
uniform float textureHeight;

void main(){

    vec2 offset = vec2(1.0/textureWidth, 1.0/textureHeight);

    // top left
    float topLeft = texture2D(texture, v_Texcoord+vec2(-offset.x, -offset.y)).r;
    // top
    float top = texture2D(texture, v_Texcoord+vec2(0, -offset.y)).r;
    // top right
    float topRight = texture2D(texture, v_Texcoord+vec2(offset.x, -offset.y)).r;
    // left
    float left = texture2D(texture, v_Texcoord+vec2(-offset.x, 0)).r;
    // center
    float center = texture2D( texture, v_Texcoord).r;
    // right
    float right = texture2D(texture, v_Texcoord+vec2(offset.x, 0)).r;
    // bottom left
    float bottomLeft = texture2D(texture, v_Texcoord+vec2(-offset.x, offset.y)).r;
    // bottom
    float bottom = texture2D(texture, v_Texcoord+vec2(0, offset.y)).r;
    // bottom right
    float bottomRight = texture2D(texture, v_Texcoord+offset).r;


    float pixelSum = bottomLeft + topRight + topLeft + bottomRight + left + right + bottom + top + center;
    float sumTest = step(1.5, pixelSum);
    float pixelTest = step(0.01, center);
          
    gl_FragColor = vec4(vec3(sumTest * pixelTest), 1.0);
}